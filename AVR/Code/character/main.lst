
main:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ef       	ldi	r30, 0xFC	; 252
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a4 e6       	ldi	r26, 0x64	; 100
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 36       	cpi	r26, 0x6E	; 110
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 46 01 	call	0x28c	; 0x28c <main>
  8a:	0c 94 7c 01 	jmp	0x2f8	; 0x2f8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <Check_IF_MrLCD_isBusy>:
  92:	17 ba       	out	0x17, r1	; 23
  94:	97 9a       	sbi	0x12, 7	; 18
  96:	82 b3       	in	r24, 0x12	; 18
  98:	88 7f       	andi	r24, 0xF8	; 248
  9a:	82 bb       	out	0x12, r24	; 18
  9c:	c7 9b       	sbis	0x18, 7	; 24
  9e:	08 c0       	rjmp	.+16     	; 0xb0 <Check_IF_MrLCD_isBusy+0x1e>
  a0:	95 9a       	sbi	0x12, 5	; 18
  a2:	00 00       	nop
  a4:	00 00       	nop
  a6:	82 b3       	in	r24, 0x12	; 18
  a8:	80 7c       	andi	r24, 0xC0	; 192
  aa:	82 bb       	out	0x12, r24	; 18
  ac:	c7 99       	sbic	0x18, 7	; 24
  ae:	f8 cf       	rjmp	.-16     	; 0xa0 <Check_IF_MrLCD_isBusy+0xe>
  b0:	8f ef       	ldi	r24, 0xFF	; 255
  b2:	87 bb       	out	0x17, r24	; 23
  b4:	08 95       	ret

000000b6 <Peek_A_Boo>:
  b6:	95 9a       	sbi	0x12, 5	; 18
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	82 b3       	in	r24, 0x12	; 18
  be:	80 7c       	andi	r24, 0xC0	; 192
  c0:	82 bb       	out	0x12, r24	; 18
  c2:	08 95       	ret

000000c4 <Send_A_Command>:
  c4:	df 93       	push	r29
  c6:	cf 93       	push	r28
  c8:	0f 92       	push	r0
  ca:	cd b7       	in	r28, 0x3d	; 61
  cc:	de b7       	in	r29, 0x3e	; 62
  ce:	89 83       	std	Y+1, r24	; 0x01
  d0:	0e 94 49 00 	call	0x92	; 0x92 <Check_IF_MrLCD_isBusy>
  d4:	89 81       	ldd	r24, Y+1	; 0x01
  d6:	88 bb       	out	0x18, r24	; 24
  d8:	82 b3       	in	r24, 0x12	; 18
  da:	8b 77       	andi	r24, 0x7B	; 123
  dc:	82 bb       	out	0x12, r24	; 18
  de:	95 9a       	sbi	0x12, 5	; 18
  e0:	00 00       	nop
  e2:	00 00       	nop
  e4:	82 b3       	in	r24, 0x12	; 18
  e6:	80 7c       	andi	r24, 0xC0	; 192
  e8:	82 bb       	out	0x12, r24	; 18
  ea:	18 ba       	out	0x18, r1	; 24
  ec:	0f 90       	pop	r0
  ee:	cf 91       	pop	r28
  f0:	df 91       	pop	r29
  f2:	08 95       	ret

000000f4 <Send_A_Character>:
  f4:	df 93       	push	r29
  f6:	cf 93       	push	r28
  f8:	0f 92       	push	r0
  fa:	cd b7       	in	r28, 0x3d	; 61
  fc:	de b7       	in	r29, 0x3e	; 62
  fe:	89 83       	std	Y+1, r24	; 0x01
 100:	0e 94 49 00 	call	0x92	; 0x92 <Check_IF_MrLCD_isBusy>
 104:	89 81       	ldd	r24, Y+1	; 0x01
 106:	88 bb       	out	0x18, r24	; 24
 108:	97 98       	cbi	0x12, 7	; 18
 10a:	92 9a       	sbi	0x12, 2	; 18
 10c:	95 9a       	sbi	0x12, 5	; 18
 10e:	00 00       	nop
 110:	00 00       	nop
 112:	82 b3       	in	r24, 0x12	; 18
 114:	80 7c       	andi	r24, 0xC0	; 192
 116:	82 bb       	out	0x12, r24	; 18
 118:	18 ba       	out	0x18, r1	; 24
 11a:	0f 90       	pop	r0
 11c:	cf 91       	pop	r28
 11e:	df 91       	pop	r29
 120:	08 95       	ret

00000122 <Send_A_String>:
 122:	cf 93       	push	r28
 124:	df 93       	push	r29
 126:	ec 01       	movw	r28, r24
 128:	88 81       	ld	r24, Y
 12a:	18 16       	cp	r1, r24
 12c:	34 f4       	brge	.+12     	; 0x13a <Send_A_String+0x18>
 12e:	21 96       	adiw	r28, 0x01	; 1
 130:	0e 94 7a 00 	call	0xf4	; 0xf4 <Send_A_Character>
 134:	89 91       	ld	r24, Y+
 136:	18 16       	cp	r1, r24
 138:	dc f3       	brlt	.-10     	; 0x130 <Send_A_String+0xe>
 13a:	df 91       	pop	r29
 13c:	cf 91       	pop	r28
 13e:	08 95       	ret

00000140 <GotoMrLCDsLocation>:
 140:	81 58       	subi	r24, 0x81	; 129
 142:	e6 2f       	mov	r30, r22
 144:	f0 e0       	ldi	r31, 0x00	; 0
 146:	e1 5a       	subi	r30, 0xA1	; 161
 148:	ff 4f       	sbci	r31, 0xFF	; 255
 14a:	90 81       	ld	r25, Z
 14c:	89 0f       	add	r24, r25
 14e:	0e 94 62 00 	call	0xc4	; 0xc4 <Send_A_Command>
 152:	08 95       	ret

00000154 <InitializeMrLCD>:
 154:	81 b3       	in	r24, 0x11	; 17
 156:	84 6a       	ori	r24, 0xA4	; 164
 158:	81 bb       	out	0x11, r24	; 17
 15a:	85 ea       	ldi	r24, 0xA5	; 165
 15c:	9e e0       	ldi	r25, 0x0E	; 14
 15e:	01 97       	sbiw	r24, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <InitializeMrLCD+0xa>
 162:	00 c0       	rjmp	.+0      	; 0x164 <InitializeMrLCD+0x10>
 164:	00 00       	nop
 166:	81 e0       	ldi	r24, 0x01	; 1
 168:	0e 94 62 00 	call	0xc4	; 0xc4 <Send_A_Command>
 16c:	83 ef       	ldi	r24, 0xF3	; 243
 16e:	91 e0       	ldi	r25, 0x01	; 1
 170:	01 97       	sbiw	r24, 0x01	; 1
 172:	f1 f7       	brne	.-4      	; 0x170 <InitializeMrLCD+0x1c>
 174:	00 c0       	rjmp	.+0      	; 0x176 <InitializeMrLCD+0x22>
 176:	00 00       	nop
 178:	8c e0       	ldi	r24, 0x0C	; 12
 17a:	0e 94 62 00 	call	0xc4	; 0xc4 <Send_A_Command>
 17e:	83 ef       	ldi	r24, 0xF3	; 243
 180:	91 e0       	ldi	r25, 0x01	; 1
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	f1 f7       	brne	.-4      	; 0x182 <InitializeMrLCD+0x2e>
 186:	00 c0       	rjmp	.+0      	; 0x188 <InitializeMrLCD+0x34>
 188:	00 00       	nop
 18a:	88 e3       	ldi	r24, 0x38	; 56
 18c:	0e 94 62 00 	call	0xc4	; 0xc4 <Send_A_Command>
 190:	90 e1       	ldi	r25, 0x10	; 16
 192:	9a 95       	dec	r25
 194:	f1 f7       	brne	.-4      	; 0x192 <InitializeMrLCD+0x3e>
 196:	00 c0       	rjmp	.+0      	; 0x198 <InitializeMrLCD+0x44>
 198:	8e e0       	ldi	r24, 0x0E	; 14
 19a:	0e 94 62 00 	call	0xc4	; 0xc4 <Send_A_Command>
 19e:	80 e1       	ldi	r24, 0x10	; 16
 1a0:	8a 95       	dec	r24
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <InitializeMrLCD+0x4c>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <InitializeMrLCD+0x52>
 1a6:	08 95       	ret

000001a8 <character>:
 1a8:	ef 92       	push	r14
 1aa:	ff 92       	push	r15
 1ac:	0f 93       	push	r16
 1ae:	1f 93       	push	r17
 1b0:	df 93       	push	r29
 1b2:	cf 93       	push	r28
 1b4:	cd b7       	in	r28, 0x3d	; 61
 1b6:	de b7       	in	r29, 0x3e	; 62
 1b8:	60 97       	sbiw	r28, 0x10	; 16
 1ba:	0f b6       	in	r0, 0x3f	; 63
 1bc:	f8 94       	cli
 1be:	de bf       	out	0x3e, r29	; 62
 1c0:	0f be       	out	0x3f, r0	; 63
 1c2:	cd bf       	out	0x3d, r28	; 61
 1c4:	1a 82       	std	Y+2, r1	; 0x02
 1c6:	19 82       	std	Y+1, r1	; 0x01
 1c8:	1c 82       	std	Y+4, r1	; 0x04
 1ca:	1b 82       	std	Y+3, r1	; 0x03
 1cc:	1e 82       	std	Y+6, r1	; 0x06
 1ce:	1d 82       	std	Y+5, r1	; 0x05
 1d0:	18 86       	std	Y+8, r1	; 0x08
 1d2:	1f 82       	std	Y+7, r1	; 0x07
 1d4:	1a 86       	std	Y+10, r1	; 0x0a
 1d6:	19 86       	std	Y+9, r1	; 0x09
 1d8:	1c 86       	std	Y+12, r1	; 0x0c
 1da:	1b 86       	std	Y+11, r1	; 0x0b
 1dc:	1e 86       	std	Y+14, r1	; 0x0e
 1de:	1d 86       	std	Y+13, r1	; 0x0d
 1e0:	18 8a       	std	Y+16, r1	; 0x10
 1e2:	1f 86       	std	Y+15, r1	; 0x0f
 1e4:	e8 2f       	mov	r30, r24
 1e6:	f9 2f       	mov	r31, r25
 1e8:	64 e0       	ldi	r22, 0x04	; 4
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	8e 01       	movw	r16, r28
 1ee:	0f 5f       	subi	r16, 0xFF	; 255
 1f0:	1f 4f       	sbci	r17, 0xFF	; 255
 1f2:	22 e0       	ldi	r18, 0x02	; 2
 1f4:	e2 2e       	mov	r14, r18
 1f6:	f1 2c       	mov	r15, r1
 1f8:	41 91       	ld	r20, Z+
 1fa:	51 91       	ld	r21, Z+
 1fc:	20 e0       	ldi	r18, 0x00	; 0
 1fe:	30 e0       	ldi	r19, 0x00	; 0
 200:	01 c0       	rjmp	.+2      	; 0x204 <character+0x5c>
 202:	9c 01       	movw	r18, r24
 204:	c9 01       	movw	r24, r18
 206:	01 96       	adiw	r24, 0x01	; 1
 208:	84 17       	cp	r24, r20
 20a:	95 07       	cpc	r25, r21
 20c:	39 f1       	breq	.+78     	; 0x25c <character+0xb4>
 20e:	88 30       	cpi	r24, 0x08	; 8
 210:	91 05       	cpc	r25, r1
 212:	b9 f7       	brne	.-18     	; 0x202 <character+0x5a>
 214:	61 50       	subi	r22, 0x01	; 1
 216:	70 40       	sbci	r23, 0x00	; 0
 218:	bf ef       	ldi	r27, 0xFF	; 255
 21a:	6f 3f       	cpi	r22, 0xFF	; 255
 21c:	7b 07       	cpc	r23, r27
 21e:	61 f7       	brne	.-40     	; 0x1f8 <character+0x50>
 220:	80 e4       	ldi	r24, 0x40	; 64
 222:	0e 94 62 00 	call	0xc4	; 0xc4 <Send_A_Command>
 226:	81 e1       	ldi	r24, 0x11	; 17
 228:	e8 2e       	mov	r14, r24
 22a:	f1 2c       	mov	r15, r1
 22c:	ec 0e       	add	r14, r28
 22e:	fd 1e       	adc	r15, r29
 230:	f8 01       	movw	r30, r16
 232:	80 81       	ld	r24, Z
 234:	0e 5f       	subi	r16, 0xFE	; 254
 236:	1f 4f       	sbci	r17, 0xFF	; 255
 238:	0e 94 62 00 	call	0xc4	; 0xc4 <Send_A_Command>
 23c:	0e 15       	cp	r16, r14
 23e:	1f 05       	cpc	r17, r15
 240:	b9 f7       	brne	.-18     	; 0x230 <character+0x88>
 242:	60 96       	adiw	r28, 0x10	; 16
 244:	0f b6       	in	r0, 0x3f	; 63
 246:	f8 94       	cli
 248:	de bf       	out	0x3e, r29	; 62
 24a:	0f be       	out	0x3f, r0	; 63
 24c:	cd bf       	out	0x3d, r28	; 61
 24e:	cf 91       	pop	r28
 250:	df 91       	pop	r29
 252:	1f 91       	pop	r17
 254:	0f 91       	pop	r16
 256:	ff 90       	pop	r15
 258:	ef 90       	pop	r14
 25a:	08 95       	ret
 25c:	22 0f       	add	r18, r18
 25e:	33 1f       	adc	r19, r19
 260:	20 0f       	add	r18, r16
 262:	31 1f       	adc	r19, r17
 264:	ab 01       	movw	r20, r22
 266:	4e 25       	eor	r20, r14
 268:	5f 25       	eor	r21, r15
 26a:	d9 01       	movw	r26, r18
 26c:	8d 91       	ld	r24, X+
 26e:	9c 91       	ld	r25, X
 270:	11 97       	sbiw	r26, 0x01	; 1
 272:	84 0f       	add	r24, r20
 274:	95 1f       	adc	r25, r21
 276:	11 96       	adiw	r26, 0x01	; 1
 278:	9c 93       	st	X, r25
 27a:	8e 93       	st	-X, r24
 27c:	61 50       	subi	r22, 0x01	; 1
 27e:	70 40       	sbci	r23, 0x00	; 0
 280:	bf ef       	ldi	r27, 0xFF	; 255
 282:	6f 3f       	cpi	r22, 0xFF	; 255
 284:	7b 07       	cpc	r23, r27
 286:	09 f0       	breq	.+2      	; 0x28a <character+0xe2>
 288:	b7 cf       	rjmp	.-146    	; 0x1f8 <character+0x50>
 28a:	ca cf       	rjmp	.-108    	; 0x220 <character+0x78>

0000028c <main>:
 28c:	0e 94 aa 00 	call	0x154	; 0x154 <InitializeMrLCD>
 290:	8c e0       	ldi	r24, 0x0C	; 12
 292:	0e 94 62 00 	call	0xc4	; 0xc4 <Send_A_Command>
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	90 93 65 00 	sts	0x0065, r25
 29e:	80 93 64 00 	sts	0x0064, r24
 2a2:	82 e0       	ldi	r24, 0x02	; 2
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	90 93 67 00 	sts	0x0067, r25
 2aa:	80 93 66 00 	sts	0x0066, r24
 2ae:	83 e0       	ldi	r24, 0x03	; 3
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	90 93 69 00 	sts	0x0069, r25
 2b6:	80 93 68 00 	sts	0x0068, r24
 2ba:	84 e0       	ldi	r24, 0x04	; 4
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	90 93 6b 00 	sts	0x006B, r25
 2c2:	80 93 6a 00 	sts	0x006A, r24
 2c6:	85 e0       	ldi	r24, 0x05	; 5
 2c8:	90 e0       	ldi	r25, 0x00	; 0
 2ca:	90 93 6d 00 	sts	0x006D, r25
 2ce:	80 93 6c 00 	sts	0x006C, r24
 2d2:	84 e6       	ldi	r24, 0x64	; 100
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <character>
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	61 e0       	ldi	r22, 0x01	; 1
 2de:	0e 94 a0 00 	call	0x140	; 0x140 <GotoMrLCDsLocation>
 2e2:	80 e0       	ldi	r24, 0x00	; 0
 2e4:	0e 94 7a 00 	call	0xf4	; 0xf4 <Send_A_Character>
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	62 e0       	ldi	r22, 0x02	; 2
 2ec:	0e 94 a0 00 	call	0x140	; 0x140 <GotoMrLCDsLocation>
 2f0:	81 e4       	ldi	r24, 0x41	; 65
 2f2:	0e 94 7a 00 	call	0xf4	; 0xf4 <Send_A_Character>
 2f6:	ff cf       	rjmp	.-2      	; 0x2f6 <main+0x6a>

000002f8 <_exit>:
 2f8:	f8 94       	cli

000002fa <__stop_program>:
 2fa:	ff cf       	rjmp	.-2      	; 0x2fa <__stop_program>
